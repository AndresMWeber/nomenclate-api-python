[tool.poetry]
authors = ["Andres Weber <andresmweber@gmail.com>"]
description = "An API for automating and generating strings based on arbitrary user-defined naming conventions"
homepage = "https://nomenclate.andresmweber.com"
keywords = [
  "Poetry",
  "Virtual Environments",
  "Tutorial",
  "Packages",
  "Packaging",
  "nomenclate",
  "naming",
  "automatic",
  "generator",
  "convention",
]
license = "MIT"
name = "nomenclate-api"
readme = "README.md"
repository = "https://github.com/andresmweber/nomenclate-api-python/"
version = "0.1.0"

[tool.poetry.dependencies]
Bcrypt-Flask = "^1.0.1"
Flask = "^1.1.2"
Flask-JWT-Extended = "^4.1.0"
Flask-Login = "^0.5.0"
Flask-RESTful = "^0.3.8"
dnspython = "^2.1.0"
flask-mongoengine = "^1.0.0"
marshmallow = "^3.12.1"
nomenclate = "^2.4.4"
pymongo = "^3.11.3"
python = "^3.6.2"
python-dotenv = "^0.17.0"
redis = "^3.5.3"
toml = "^0.10.2"

[tool.poetry.dev-dependencies]
apispec = "^4.4.1"
apispec-webframeworks = "^0.5.2"
black = "^21.5b1"
coverage = "^5.5"
jsonschema = "^3.2.0"
poethepoet = "^0.10.0"
pytest = "^5.2"
pytest-cov = "^2.11.1"
pytest-dotenv = "^0.5.2"
pytest-html = "^3.1.1"
requests = "^2.25.1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry.scripts]
run = "wsgi:main"

[tool.poetry.urls]
issues = "https://github.com/andresmweber/nomenclate-api-python/issues"
server = "https://nom-api.andresmweber.com/"
vcs = "https://github.com/andresmweber/nomenclate-api-python"

[tool.poe.tasks]
deploy = {shell = "sls deploy"}
deploy-domain = {shell = "SLS_DEBUG=* sls create_domain"}
dev = {shell = "sls wsgi serve"}
env = {shell = "sls export-env"}
# shell script based task 
docs = "python nomenclate_api/api_spec.py"
freeze = {shell = "poetry export -f requirements.txt > requirements.txt --without-hashes"}
# python script based task 
mksandwich = {script = "my_package.sandwich:build"}
# simple command based task
test = "coverage run -m pytest --envfile ./.env.test"

[tool.black]
include = '\.pyi?$'
line-length = 100
target-version = ['py38']

[tool.pytest.ini_options]
env_files = [
  ".env.test",
]
env_override_existing_values = 1

[tool.coverage.run]
branch = true
source = ["nomenclate_api"]

[tool.coverage.report]
ignore_errors = true
exclude_lines = [
  "if self.debug:",
  "pragma: no cover",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]
omit = [
  "tests/*",
  "**/*/__init__.py",
  "nomenclate_api/db/*.py",
  "api_spec.py",
  "openapi_plugin.py",
  "schemas.py",
  "responses.py",
]
