{
    "components": {
        "schemas": {
            "Base": {
                "properties": {},
                "type": "object"
            },
            "ConfigurationPost": {
                "properties": {
                    "data": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "name"
                ],
                "type": "object"
            },
            "ConfigurationPut": {
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "_id",
                    "data",
                    "name"
                ],
                "type": "object"
            },
            "Email": {
                "properties": {
                    "email": {
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "type": "object"
            },
            "EmailPassword": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "type": "object"
            },
            "ErrorComplex": {
                "properties": {
                    "error": {
                        "type": "object"
                    }
                },
                "required": [
                    "error"
                ],
                "type": "object"
            },
            "ErrorSimple": {
                "properties": {
                    "error": {
                        "type": "string"
                    }
                },
                "required": [
                    "error"
                ],
                "type": "object"
            },
            "ExistsResponse": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "exists": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "exists",
                    "password"
                ],
                "type": "object"
            },
            "LoginResponse": {
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ],
                "type": "object"
            },
            "NameEmailPassword": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "name",
                    "password"
                ],
                "type": "object"
            },
            "SignupResponse": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {
            "JWTAuth": {
                "bearerFormat": "JWT",
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "info": {
        "contact": {
            "email": "andresmweber@gmail.com"
        },
        "description": "Nomenclate Api",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "Nomenclate Api",
        "version": "0.1.0"
    },
    "openapi": "3.0.2",
    "paths": {
        "/auth/deactivate": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Deactivated account successfully"
                    },
                    "404": {
                        "description": "Logged in user not found."
                    },
                    "409": {
                        "description": "User already deactivated."
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/auth/exists": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Email"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExistsResponse"
                                }
                            }
                        },
                        "description": "The requested user account exists."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExistsResponse"
                                }
                            }
                        },
                        "description": "The requested user account does not exist."
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        },
                        "description": "Return a nomenclate object"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "Email or password invalid."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The specified user account is not active."
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful logout"
                    },
                    "400": {
                        "description": "User login token expired."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The specified user account is not active."
                    }
                },
                "security": [
                    {
                        "JWTAuth": []
                    }
                ]
            }
        },
        "/auth/reactivate": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User already deactivated."
                    },
                    "401": {
                        "description": "Incorrect username or password."
                    },
                    "404": {
                        "description": "Logged in user not found."
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NameEmailPassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupResponse"
                                }
                            }
                        },
                        "description": "User created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "There was a problem creating the user."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "That email address is already in use."
                    }
                }
            }
        },
        "/config": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "Sucessfully deleted the requested configuration"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The requested resource does not exist."
                    }
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        },
                        "description": "Return a nomenclate object"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The supplied payload is invalid."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The specified configuration already exists."
                    }
                }
            },
            "put": {
                "responses": {
                    "204": {
                        "description": "Sucessfully updated the requested configuration"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The requested resource does not exist."
                    }
                }
            }
        },
        "/config/{name}": {
            "get": {
                "parameters": [
                    {
                        "description": "Name of the config to get",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        },
                        "description": "Return the config"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The requested resource does not exist."
                    }
                }
            }
        },
        "/me": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        },
                        "description": "Return a Profile"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The user from the current credentials does not exist"
                    }
                }
            }
        },
        "/me/config": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        },
                        "description": "Return the logged in user's active config"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "Missing config"
                    }
                }
            },
            "post": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        },
                        "description": "Return a Profile"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "Missing config"
                    }
                }
            }
        },
        "/me/configs": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        },
                        "description": "Return all configs created by the logged in user"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "Missing config"
                    }
                }
            }
        },
        "/nomenclate": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "Sucessfully deleted the nomenclate object"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The nomenclate object is invalid."
                    }
                }
            },
            "post": {
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Base"
                                }
                            }
                        },
                        "description": "Return a nomenclate object"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The supplied payload is invalid."
                    }
                }
            },
            "put": {
                "responses": {
                    "204": {
                        "description": "Sucessfully updated the nomenclate object"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorSimple"
                                }
                            }
                        },
                        "description": "The supplied payload is invalid."
                    }
                }
            }
        }
    },
    "servers": [
        {
            "description": "Production Server",
            "url": "https://nom-api.andresmweber.com/"
        }
    ],
    "tags": []
}